using Supabase.Postgrest.Attributes;
using Supabase.Postgrest.Models;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Text;
using System.Threading.Tasks;



namespace FinanceTracker.Domain.Models
{

    [Supabase.Postgrest.Attributes.Table("expense")]
    public class expense : BaseModel
    {
        // This must match the primary key column in DB. 
        // The second param 'false' means it's not auto-generated by the library (we let the DB do it).
        [PrimaryKey("id", false)]
        [Supabase.Postgrest.Attributes.Column("id")]
        public int Id { get; set; }

        [Supabase.Postgrest.Attributes.Column("user_id")]
        public Guid UserId { get; set; }

        [Supabase.Postgrest.Attributes.Column("date")]
        public DateTime Date { get; set; } = DateTime.UtcNow;

        [Supabase.Postgrest.Attributes.Column("description")]
        public string Description { get; set; }

        [Supabase.Postgrest.Attributes.Column("payment_method_id")]
        public int? PaymentMethodId { get; set; }

        [Supabase.Postgrest.Attributes.Column("created_by")]
        public Guid? CreatedBy { get; set; }

        [Supabase.Postgrest.Attributes.Column("created_at")]
        public DateTime CreatedAt { get; set; } = DateTime.UtcNow;

        [Supabase.Postgrest.Attributes.Column("updated_by")]
        public Guid? UpdatedBy { get; set; }

        [Supabase.Postgrest.Attributes.Column("updated_at")]
        public DateTime? UpdatedAt { get; set; }

        [Supabase.Postgrest.Attributes.Column("isdeleted")]
        public bool IsDeleted { get; set; }

        // Supabase won't automatically handle child relationships;
        // you can keep this if you want to do something else in EF or just for reference
        public virtual ICollection<ExpenseItem> ExpenseItems { get; set; }
            = new List<ExpenseItem>();
    }

    public class ExpenseDto
    {
        public int Id { get; set; }
        public Guid UserId { get; set; }
        public DateTime Date { get; set; }
        public string Description { get; set; }
        public int? PaymentMethodId { get; set; }
        public Guid? CreatedBy { get; set; }
        public DateTime CreatedAt { get; set; }
        public Guid? UpdatedBy { get; set; }
        public DateTime? UpdatedAt { get; set; }
        public bool IsDeleted { get; set; }

        [NotMapped]
        public List<ExpenseItemDto> ExpenseItems { get; set; }
    = new List<ExpenseItemDto>();
    }

    public class CreateExpenseDto
    {
        public Guid UserId { get; set; }
        // Default to "now" if client doesn't send a date

        public DateTime? Date { get; set; } = DateTime.UtcNow;
        public string Description { get; set; }
        public int PaymentMethodId { get; set; }
        public Guid? CreatedBy { get; set; }
        public bool? IsDeleted { get; set; }
        public List<CreateExpenseItemDto> ExpenseItems { get; set; }
    = new List<CreateExpenseItemDto>();
    }

    public class UpdateExpenseDto
    {
        public DateTime? Date { get; set; }
        public string Description { get; set; }
        public int? PaymentMethodId { get; set; }
        public Guid? UpdatedBy { get; set; }
        public bool? IsDeleted { get; set; }
        public List<CreateExpenseItemDto> ExpenseItems { get; set; }
= new List<CreateExpenseItemDto>();
    }
}


